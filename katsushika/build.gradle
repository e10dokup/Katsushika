apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode versionCode
        versionName versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    androidTestImplementation "org.mockito:mockito-inline:2.13.0"
    androidTestImplementation "org.mockito:mockito-android:2.13.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.20"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.20"

    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
}
kotlin {
    experimental {
        coroutines "enable"
    }
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = 'xyz.dokup.katsushika'
version = '1.0.0'
def siteUrl = 'https://github.com/e10dokup/Katsushika'
def gitUrl = 'https://github.com/e10dokup/Katsushika.git'

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = 'katsushika'
        desc = 'Simple ImageLoader for Android inspired by Picasso'
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/e10dokup/Katsushika/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['android']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'katsushika'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'e10dokup'
                        name 'Yoshihiro Wada'
                        email '2edokup@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/e10dokup/Katsushika.git'
                    developerConnection 'https://github.com/e10dokup/Katsushika.git'
                    url siteUrl
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

afterEvaluate {
    tasks.findByPath(":katsushika:javadoc").enabled = false
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
